buildscript {
    ext {
        kotlinVersion = '1.0.6'
        springBootVersion = '1.4.2.RELEASE'
    }

    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}

apply plugin: 'kotlin'
apply plugin: 'org.springframework.boot'

apply from: "$rootDir/gradle/versioning.gradle"

apply plugin: 'application'
apply plugin: 'docker'

repositories {
    mavenCentral()
}

jar {
    baseName = 'jalgoarena-api'
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion",
            'org.springframework.boot:spring-boot-starter-web',
            'org.springframework.boot:spring-boot-starter-actuator',
            'org.springframework.cloud:spring-cloud-starter-zuul',
            'org.springframework.cloud:spring-cloud-starter-eureka',
            'io.springfox:springfox-swagger2:2.7.0',
            'io.springfox:springfox-swagger-ui:2.7.0'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Camden.SR3"
    }
}

defaultTasks 'clean', 'bootRepackage'

task stage {
    dependsOn 'bootRepackage'
}

task releaseZip(type: Zip, dependsOn: 'bootRepackage') {
    from('build/libs/') {
        include('*.jar')
    }
    from 'run.sh'
    archiveName "JAlgoArena-API-${version}.zip"
    destinationDir(file('build/libs'))
}

docker {
    baseImage "java:8"
}
